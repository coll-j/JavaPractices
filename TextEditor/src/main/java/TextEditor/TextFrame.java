/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TextEditor;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ZK
 */
public class TextFrame extends javax.swing.JFrame {

    /**
     * Creates new form TextFrame
     */
    public TextFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        fc = new JFileChooser();
        
        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Plain text", "txt");
        fc.setFileFilter(txtFilter);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Text Editor");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setLineWrap(true);
        jScrollPane1.setViewportView(jTextArea1);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        
        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jMenu1.setText("File");
        Action NewFile = new AbstractAction("New File"){
            @Override
            public void actionPerformed(ActionEvent arg0){

            }
        };

        Action OpenFile = new AbstractAction("Open File"){
            @Override
            public void actionPerformed(ActionEvent arg0){
                if(fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
                    openFile(fc.getSelectedFile().getAbsolutePath());
                }
            }
        };

        Action SaveFile = new AbstractAction("Save File"){
            @Override
            public void actionPerformed(ActionEvent arg0){
                saveFile();
            }
        };

        Action Exit = new AbstractAction("Exit"){
            @Override
            public void actionPerformed(ActionEvent arg0){
                dispose();
            }
        };
        
        Action NewWindow = new AbstractAction("New Window"){
            @Override
            public void actionPerformed(ActionEvent arg0){
                new TextFrame().setVisible(true);
            }
        };
        jMenuBar1.add(jMenu1);
        jMenu1.add(NewWindow);
        jMenu1.add(NewFile);
        jMenu1.add(OpenFile);
        jMenu1.add(SaveFile);
        jMenu1.add(Exit);
        
        jMenu2.setText("Edit");

        Action Copy = new AbstractAction("Copy"){
            @Override
            public void actionPerformed(ActionEvent arg0){
                String s = jTextArea1.getSelectedText();
                StringSelection ss = new StringSelection(s);
                Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
                cb.setContents(ss, null);
            }
        };

        Action Paste = new AbstractAction("Paste"){
            @Override
            public void actionPerformed(ActionEvent arg0){
                jTextArea1.paste();
            }
        };

        Action Cut = new AbstractAction("Cut"){
            @Override
            public void actionPerformed(ActionEvent arg0){

            }
        };
        
        Action Undo = new AbstractAction("Undo"){
            @Override
            public void actionPerformed(ActionEvent arg0){

            }
        };

        Action Find = new AbstractAction("Find"){
            @Override
            public void actionPerformed(ActionEvent arg0){

            }
        };

        Action FindReplace = new AbstractAction("Find and Replace"){
            @Override
            public void actionPerformed(ActionEvent arg0){

            }
        };

        jMenuBar1.add(jMenu2);
        jMenu2.add(Copy);
        jMenu2.add(Paste);
        jMenu2.add(Cut);
        jMenu2.add(Undo);
        jMenu2.add(Find);
        jMenu2.add(FindReplace);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }
    
    // METHODS
    private void openFile(String fileName){
        FileReader fr = null;
        try {
            fr = new FileReader(fileName);
            jTextArea1.read(fr, null);
            fr.close();
            setTitle(fileName);
        } catch (IOException e){
            e.printStackTrace();
        }
    }
    
    private void saveFile(){
        if(fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION){
            FileWriter fw = null;
            try {
                fw = new FileWriter(fc.getSelectedFile().getAbsolutePath());
                jTextArea1.write(fw);
                fw.close();
            } catch (IOException e){
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextFrame().setVisible(true);
            }
        });
    }

    
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private JFileChooser fc;
}
